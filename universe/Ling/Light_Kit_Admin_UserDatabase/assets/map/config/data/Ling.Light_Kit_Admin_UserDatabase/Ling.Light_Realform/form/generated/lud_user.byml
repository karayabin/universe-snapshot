_vars: 
    nuggetId: Ling.Light_Kit_Admin_UserDatabase:generated/lud_user

rendering: 
    title: User form
    related_links: 
        - 
            text: "See the list of \"User\" items"
            url: ::(@reverse_router->getUrl(lch_route-hub, {execute: Ling\Light_Kit_Admin_UserDatabase\Controller\Generated\LudUserController->render}))::
            icon: fas fa-plus-circle
        
    

ric: 
    - id

feeder: null
storage_id: lud_user
success_messages: 
    create: The item has been successfully stored in the database
    update: The item has been successfully updated in the database, with ric {sRic}

security: []
chloroform: 
    id: realgen-lud_user
    fields: 
        user_group_id: 
            label: User group id
            type: table_list
            validators: 
                required: []
            
            nullable: false
            tableListDirectiveId: %{nuggetId}:chloroform.fields.user_group_id.tableListConf
            tableListConf: 
                sql: select id as value, concat(id, '. ', name) as label from lud_user_group
                column: id
                search_column: concat(id, '. ', name)
                renderAs: adapt
                threshold: 200
                security: 
                    any: 
                        micro_permission: store.lud_user_group.read
                        permission: Ling.Light_Kit_Admin.admin
                    
                    all: []
                
            
        
        identifier: 
            label: Identifier
            type: string
            validators: 
                required: []
            
            nullable: false
        
        pseudo: 
            label: Pseudo
            type: string
            validators: 
                required: []
            
            nullable: false
        
        email: 
            label: Email
            type: string
            validators: 
                required: []
            
            nullable: false
        
        password: 
            label: Password
            type: string
            validators: 
                required: []
            
            nullable: false
        
        avatar_url: 
            label: Avatar url
            type: string
            validators: 
                required: []
            
            nullable: false
        
        extra: 
            label: Extra
            type: string
            validators: 
                required: []
            
            nullable: false
        
    

success_handler: 
    class: defaultDbHandler