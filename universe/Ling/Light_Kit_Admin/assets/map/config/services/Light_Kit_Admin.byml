kit_admin:
    instance: Ling\Light_Kit_Admin\Service\LightKitAdminService
    methods:
        setContainer:
            container: @container()
        setOptions:
            options:
                lang: eng
                login:
                    # Used by LoginFormController to redirect the user after a successful connection on the login form.
                    on_success_route: lka_route-home
                    # Used by ProtectedPageController to redirect a non valid user.
                    # Used by LogoutController to redirect a valid user after a disconnect.
                    login_route: lka_route-login
                access_denied:
                    access_denied_route: lka_route-forbidden_page
                notifications:
                    # alert|toast
                    default_type: alert
#        setUserRowOwnershipManager:
#            manager:
#                instance: Ling\Light_Kit_Admin\UserRowOwnership\LightKitAdminUserRowOwnershipManager





# --------------------------------------
# hooks
# --------------------------------------
$ajax_handler.methods_collection:
    -
        method: registerHandler
        args:
            id: Light_Kit_Admin
            handler:
                instance: Ling\Light_Kit_Admin\AjaxHandler\LightKitAdminAjaxHandler


$bmenu.methods_collection:
    -
        method: registerHost
        args:
            menu_type: admin_main_menu
            host:
                instance: Ling\Light_Kit_Admin\BMenu\LightKitAdminBMenuHost
                methods:
                    setContainer:
                        container: @container()
                    setBaseDir:
                        dir: ${app_dir}/config/data/Light_Kit_Admin/bmenu
                    setMenuStructureId:
                        id: lka_mainmenu_1
                    setDefaultItemsParentPath:
                        path: lka-plugins

$bullsheet.methods_collection:
    -
        method: registerBullsheeter
        args:
            identifier: Light_Kit_Admin.default
            bullsheeter:
                instance: Ling\Light_Kit_Admin\Bullsheet\LightKitAdminGeneralBullsheeter





#$controller_hub.methods_collection:
#    -
#        method: registerHandler
#        args:
#            plugin: Light_Kit_Admin
#            handler:
#                instance: Ling\Light_Kit_Admin\ControllerHub\LightKitAdminControllerHubHandler
#                methods:
#                    setContainer:
#                        container: @container()

$easy_route.methods_collection:
    -
        method: registerBundleFile
        args:
            file: config/data/Light_Kit_Admin/Light_EasyRoute/lka_routes.byml





$events.methods_collection:
    -
        method: registerListener
        args:
            events:
                - Light_Kit_Admin.on_user_successful_connexion
            listener:
                instance: @service(kit_admin)
                callable_method: onWebsiteUserLogin
    -
        method: registerListener
        args:
            events:
                - Light.on_exception_caught
            listener:
                instance: @service(kit_admin)
                callable_method: onLightExceptionCaught


$kit.methods_collection:
    -
        method: addPageConfigurationTransformer
        args:
            -
                instance: Ling\Light_Kit_Admin\PageConfigurationTransformer\LightKitAdminPageConfigurationTransformer

$micro_permission.methods_collection:
    -
        method: registerMicroPermissionsByProfile
        args:
            file: ${app_dir}/config/data/Light_Kit_Admin/Light_MicroPermission/kit_admin.profile.byml






$realist.methods_collection:
    -
        method: registerListRenderer
        args:
            identifier: Light_Kit_Admin
            renderer:
                instance: Ling\Light_Kit_Admin\Realist\Rendering\LightKitAdminRealistListRenderer
    -
        method: registerListItemRenderer
        args:
            identifier: Light_Kit_Admin
            renderer:
                instance: Ling\Light_Kit_Admin\Realist\Rendering\LightKitAdminRealistListItemRenderer



$user_database.methods_collection:
#    -
#        method: setRootAvatarUrl
#        args:
#            avatar_url: /plugins/Light_Kit_Admin/img/avatars/root_avatar.png
    -
        method: setPasswordProtector
        args:
            protector: @service(password_protector)


# --------------------------------------
# vars
# --------------------------------------
$user_database_vars.bullsheeter_avatar_img_dir: ${app_dir}/www/plugins/Light_Kit_Admin/img/avatars2


